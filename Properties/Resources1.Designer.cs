//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDFM.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CDFM.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to specify what actions should be taken when either utility is started, stopped, or a match is found..
        /// </summary>
        public static string ActionGotFocus {
            get {
                return ResourceManager.GetString("ActionGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to select the type of activity to be performed. .
        /// </summary>
        public static string ActivityGotFocus {
            get {
                return ResourceManager.GetString("ActivityGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use capture trace to capture a real-time trace and when it is not necessary to trigger a particular action off of a single trace message. This option provides the best performance..
        /// </summary>
        public static string CaptureTrace {
            get {
                return ResourceManager.GetString("CaptureTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use capture trace message to capture a real-time trace when it is necessary to trigger a particular action off of a single trace message. This option may produce additional cpu utilization..
        /// </summary>
        public static string CaptureTraceMessage {
            get {
                return ResourceManager.GetString("CaptureTraceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8263A91E-66CC-4BE4-919B-E962E5F40CC7 _#cdfm#_
        ///#typev  cdfmonitor 0 &quot;%0%10!s!:%11!d!:%12!d!:%13!s!&quot;
        ///{
        ///Module, ItemWString -- 10
        ///Class, ItemLong -- 11
        ///Level, ItemLong -- 12
        ///MSG, ItemWString -- 13
        ///}.
        /// </summary>
        public static string CDFMonitorTMF {
            get {
                return ResourceManager.GetString("CDFMonitorTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8263A91E-66CC-4BE4-919B-E962E5F40CC7.
        /// </summary>
        public static string CDFMonitorTMFGuid {
            get {
                return ResourceManager.GetString("CDFMonitorTMFGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 68fdd900-4a3e-11d1-84f4-0000f80464e3 EventTrace
        ///#typev LogFileHeader    0      &quot;%0EventTrace Header&quot;
        ///{
        ///    BufferSize,     ItemULong -- 10
        ///    Version,        ItemULong -- 11
        ///    BuildNumber,    ItemULong -- 12
        ///    NumProc,        ItemULong -- 13
        ///    EndTime,        ItemULongLong -- 14
        ///    TimerResolution,ItemULong -- 15
        ///    MaxFileSize,    ItemULong -- 16
        ///    LogFileMode,    ItemULongX -- 17
        ///    BuffersWritten, ItemULong -- 18
        ///    StartBuffers,   ItemULong -- 19
        ///    PointerSize,    ItemULong - [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EventTraceHeaderTMF {
            get {
                return ResourceManager.GetString("EventTraceHeaderTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 68fdd900-4a3e-11d1-84f4-0000f80464e3.
        /// </summary>
        public static string EventTraceHeaderTMFGuid {
            get {
                return ResourceManager.GetString("EventTraceHeaderTMFGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Citrix CDFMonitor.
        /// </summary>
        public static string FriendlyName {
            get {
                return ResourceManager.GetString("FriendlyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to kernel.etl.
        /// </summary>
        public static string KernelSessionFileName {
            get {
                return ResourceManager.GetString("KernelSessionFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 9e814aad-3204-11d2-9a82-006008a86939.
        /// </summary>
        public static string KernelSessionGuid {
            get {
                return ResourceManager.GetString("KernelSessionGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NT Kernel Logger.
        /// </summary>
        public static string KernelSessionName {
            get {
                return ResourceManager.GetString("KernelSessionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to specify logging options for both .csv and .etl file outputs. This tab also configures options for Console and &apos;Output&apos; tab output. When using &apos;Log File Server&apos; this utility does NOT delete any zip files uploaded to server so be sure to plan accordingly..
        /// </summary>
        public static string LoggingGotFocus {
            get {
                return ResourceManager.GetString("LoggingGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1c7af7a9-d188-4604-a430-9c378087ca5d _#dotNet#_
        ///#typev  unknown1 1 &quot;%0%10!s!:%11!d!:%12!d!:%13!s!&quot;
        ///
        ///
        ///{
        ///Module, ItemWString -- 10
        ///Class, ItemLong -- 11
        ///Level, ItemLong -- 12
        ///MSG, ItemWString -- 13
        ///}
        ///#typev  unknown2 2 &quot;%0%10!s!:%11!d!:%12!d!:%13!s!&quot;
        ///
        ///
        ///{
        ///Module, ItemWString -- 10
        ///Class, ItemLong -- 11
        ///Level, ItemLong -- 12
        ///MSG, ItemWString -- 13
        ///}
        ///#typev  unknown3 3 &quot;%0%10!s!:%11!d!:%12!d!:%13!s!: Start 0x%14!0I64u!: Stop 0x%15!I64x!: Duration %16!s! seconds&quot;
        ///
        ///
        ///{
        ///Module, ItemWString --  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string MagicTMF {
            get {
                return ResourceManager.GetString("MagicTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1c7af7a9-d188-4604-a430-9c378087ca5d.
        /// </summary>
        public static string MagicTMFGuid {
            get {
                return ResourceManager.GetString("MagicTMFGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to supply a Regex expression to be used when tracing or parsing for a particular message. This tab can be used to validate the regular expression and test the regular expression against sample text..
        /// </summary>
        public static string MatchGotFocus {
            get {
                return ResourceManager.GetString("MatchGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input the regular expression to be used when tracing or parsing for a particular message..
        /// </summary>
        public static string MatchRegexPattern {
            get {
                return ResourceManager.GetString("MatchRegexPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied regular expression is invalid..
        /// </summary>
        public static string MatchRegexPatternInvalid {
            get {
                return ResourceManager.GetString("MatchRegexPatternInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied regular expression is valid. Use sample text to verify pattern will capture the desired match..
        /// </summary>
        public static string MatchRegexPatternValid {
            get {
                return ResourceManager.GetString("MatchRegexPatternValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input sample text to test the regular expression pattern supplied in RegexPattern..
        /// </summary>
        public static string MatchRegexTest {
            get {
                return ResourceManager.GetString("MatchRegexTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the supplied regular expression is invalid or the the sample text is invalid..
        /// </summary>
        public static string MatchRegexTestInvalid {
            get {
                return ResourceManager.GetString("MatchRegexTestInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were no matches using the current RegexPattern against the sample text provided. Please verify RegexPattern and sample text..
        /// </summary>
        public static string MatchRegexTestNoMatch {
            get {
                return ResourceManager.GetString("MatchRegexTestNoMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input sample text to match here ....
        /// </summary>
        public static string MatchRegexTestText {
            get {
                return ResourceManager.GetString("MatchRegexTestText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to select the traces modules needed for realtime tracing. By default, modules will be enumerated from local machine. If deploying remotely, Select the Remote button and populate with machine name or IP of machine that will be traced. Modules will be enumerated from the remote machine. If Enable modules by filter is checked, make sure module source is always available..
        /// </summary>
        public static string ModulesGotFocus {
            get {
                return ResourceManager.GetString("ModulesGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string Network {
            get {
                return ResourceManager.GetString("Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to enable receiving traces and monitoring data over network from CDFMonitor clients using UDP protocol. UDP protocol messaging is not gauranteed and all traces are sent in CLEAR TEXT. Supply Server name, server udp port, and client udp port. Udp ping time is in seconds is how often the udp client will send a ping to server. Minimum time is 60 seconds..
        /// </summary>
        public static string NetworkGotFocus {
            get {
                return ResourceManager.GetString("NetworkGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to specify smtp parameters for notification that a match has occured. Password for Notify if configured will be stored as clear text in config file. To prompt for password, supply &apos;User&apos; and leave &apos;Password&apos; blank..
        /// </summary>
        public static string NotifyGotFocus {
            get {
                return ResourceManager.GetString("NotifyGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to set miscellaneous options and run certain administrative functions. When selecting &apos;Use Credentials&apos;, the credentials will be permanently stored in windows &apos;Credential Manager&apos; under name &apos;CDFMonitor&apos; if &apos;Remember my pasword&apos; is checked. Otherwise, the credentials are only stored in process memory while process is running. Unchecking &apos;Use Credentials&apos; removes the &apos;CDFMonitor&apos; credentials from windows &apos;Credential Manager&apos; if &apos;Remember my password&apos; was checked..
        /// </summary>
        public static string OptionsGotFocus {
            get {
                return ResourceManager.GetString("OptionsGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to view all output from utility. This output can be controlled by options specified in the &apos;Logging&apos; tab. The output is the same as output to console when runas is set to console and to the output log file. the &apos;Filter&apos; line is a filter only for the display in the Output console. It filters based on regex expressions and displays all matched traces in the Output console buffer. Selecting &apos;Invert&apos; will filter any matched traces from being viewed..
        /// </summary>
        public static string OutputGotFocus {
            get {
                return ResourceManager.GetString("OutputGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the parse trace to parse an existing .etl trace and when it is not necessary to trigger a particular action off of a single trace message. Wildcards for *.zip and *.etl can be used..
        /// </summary>
        public static string ParseTrace {
            get {
                return ResourceManager.GetString("ParseTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the parse trace to parse an existing .etl trace. Wildcards for example *.zip and *.etl can be used to parse all files in specified directory and subdirectories. Matches and Actions can also be configured when it is necessary to trigger a particular action off of a matched trace message..
        /// </summary>
        public static string ParseTraceMessage {
            get {
                return ResourceManager.GetString("ParseTraceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3d6fa8d0-fe05-11d0-9dda-00c04fd7ba7c Process
        ///#version        3
        ///
        ///#typev Start   99  &quot;%0Started Process %11!X!.%12!X! &quot;%17!s!&quot; :: %16!s! (Session=%13!d!) &quot;
        ///{
        ///ProcessId, ItemPtr -- 10
        ///ParentId, ItemPtr -- 11
        ///UserSID, ItemKSid -- 12
        ///ImageFileName, ItemString -- 13
        ///}
        ///
        ///#typev Start   1  &quot;%0Started Process %11!X!.%12!X! &quot;%17!s!&quot; :: %16!s! (Session=%13!d!) &quot;
        ///{
        ///UniqueProcessKey, ItemPtr -- 10
        ///Process Id, ItemULong -- 11
        ///Parent Id, ItemULong -- 12
        ///Session Id, ItemULong -- 13
        ///Exit Status, ItemUlong -- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ProcessTMF {
            get {
                return ResourceManager.GetString("ProcessTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3d6fa8d0-fe05-11d0-9dda-00c04fd7ba7c.
        /// </summary>
        public static string ProcessTMFGuid {
            get {
                return ResourceManager.GetString("ProcessTMFGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to F00DDE93-3F40-48F6-8CDC-4886534185B9.
        /// </summary>
        public static string ProductGuid {
            get {
                return ResourceManager.GetString("ProductGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Remote Management to manage remote instances of CDFMonitor. Some management examples are: deploy, undeploy, and gathering of trace files from remote instances..
        /// </summary>
        public static string RemoteActivities {
            get {
                return ResourceManager.GetString("RemoteActivities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to manage CDFMonitor remotely. Instances can be deployed, gathered, and undeployed..
        /// </summary>
        public static string RemoteGotFocus {
            get {
                return ResourceManager.GetString("RemoteGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides Citrix CDF Trace monitoring and management..
        /// </summary>
        public static string ServiceDescription {
            get {
                return ResourceManager.GetString("ServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CDFMonitor.
        /// </summary>
        public static string ServiceName {
            get {
                return ResourceManager.GetString("ServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to c5a17538-0601-40ba-87c4-79b51c7448dd.
        /// </summary>
        public static string SessionGuid {
            get {
                return ResourceManager.GetString("SessionGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CDFMonitor.
        /// </summary>
        public static string SessionName {
            get {
                return ResourceManager.GetString("SessionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //******************************************
        ///// System Trace Definitions
        ///// Version 0006.1      22th Sep 2004
        /////******************************************
        ///
        ///// The #typev statement may be used to convert
        ///// messages into user readable forms.
        ///// Syntax:
        /////
        ///// Guid                 EventName
        ///// #version             value
        ///// #level               value                   // Not Supported
        ///// #typeV name1 value1  FormatString
        ///// {
        /////   MofFields
        ///// }
        ///// #typeV name2 value2  FormatString
        ///// {
        /////   M [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SystemTMF {
            get {
                return ResourceManager.GetString("SystemTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #9a280ac0-c8e0-11d1-84e2-00c04fb998a2 TcpIp
        ///#version 2
        ///
        ///#typev Send 10 &quot;%0TCPIP PID:%10!d! Send to %12!s!:%14!d! from %13!s!:%15!d! start:%16!X! end:%17!X! connection:%18!X! sequence:%19!X! size:%11!d!&quot; 
        ///{
        ///PID,   ItemULong -- 10
        ///size,  ItemULong -- 11
        ///daddr, ItemIPAddr -- 12
        ///saddr, ItemIPAddr -- 13
        ///dport, ItemUShort -- 14
        ///sport, ItemUShort -- 15
        ///startTime,  ItemULong -- 16
        ///endTime,  ItemULong -- 17
        ///connId,  ItemULong -- 18
        ///seq,  ItemULong -- 19
        ///}
        ///
        ///#typev Receive 11 &quot;%0TCPIP PID:%10!d! Recei [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TcpTMF {
            get {
                return ResourceManager.GetString("TcpTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 9a280ac0-c8e0-11d1-84e2-00c04fb998a2.
        /// </summary>
        public static string TcpTMFGuid {
            get {
                return ResourceManager.GetString("TcpTMFGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3d6fa8d1-fe05-11d0-9dda-00c04fd7ba7c Thread
        ///#version 0
        ///
        ///#version 2
        ///#typev Start   1  &quot;%0Started Thread %10!X!.%11!X! &quot;
        ///{
        ///    ProcessId, ItemULong -- 10
        ///    ThreadId, ItemULong -- 11
        ///    StackBase, ItemPtr -- 12
        ///    StackLimit, ItemPtr -- 13
        ///    UserStackBase, ItemPtr -- 14
        ///    UserStackLimit, ItemPtr -- 15
        ///    StartAddr, ItemPtr -- 16
        ///    Win32StartAddr, ItemPtr -- 17
        ///    TebBase, ItemPtr -- 18
        ///    WaitMode, ItemChar -- 19 
        ///}
        ///
        ///#typev End     2  &quot;%0Ended   Thread %10!X!.%11!X! &quot; 
        ///{
        ///    Pr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ThreadTMF {
            get {
                return ResourceManager.GetString("ThreadTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3d6fa8d1-fe05-11d0-9dda-00c04fd7ba7c.
        /// </summary>
        public static string ThreadTMFGuid {
            get {
                return ResourceManager.GetString("ThreadTMFGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to guids.txt.
        /// </summary>
        public static string TMFServerGuidList {
            get {
                return ResourceManager.GetString("TMFServerGuidList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide path to existing .etl file to be parsed..
        /// </summary>
        public static string TraceFileGotFocus {
            get {
                return ResourceManager.GetString("TraceFileGotFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bf3a50c5-a9c9-4988-a005-2df0b7c80f80 UdpIp
        ///#version 0
        ///#version 2
        ///
        ///#typev Send 10 &quot;%0UDP PID:%10!d! Send to %12!s!:%14!d! from %13!s!:%15!d! start:%16!X! end:%17!X! connection:%18!X! sequence:%19!X! size:%11!d!&quot; 
        ///{
        ///PID,   ItemULong -- 10
        ///size,  ItemULong -- 11
        ///daddr, ItemIPAddr -- 12
        ///saddr, ItemIPAddr -- 13
        ///dport, ItemUShort -- 14
        ///sport, ItemUShort -- 15
        ///startTime,  ItemULong -- 16
        ///endTime,  ItemULong -- 17
        ///connId,  ItemULong -- 18
        ///seq,  ItemULong -- 19
        ///}
        ///
        ///#typev Receive 11 &quot;%0UDP PID:%10!d [rest of string was truncated]&quot;;.
        /// </summary>
        public static string UdpTMF {
            get {
                return ResourceManager.GetString("UdpTMF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bf3a50c5-a9c9-4988-a005-2df0b7c80f80.
        /// </summary>
        public static string UdpTMFGuid {
            get {
                return ResourceManager.GetString("UdpTMFGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tab to specify upload paremeters for uploading specified files in &apos;Url Files&apos; when a match occurs. Password for Upload if configured will be stored as clear text in config file. To prompt for password, supply &apos;User&apos; and leave &apos;Password&apos; blank..
        /// </summary>
        public static string UploadGotFocus {
            get {
                return ResourceManager.GetString("UploadGotFocus", resourceCulture);
            }
        }
    }
}
